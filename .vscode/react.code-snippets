{
	// Place your workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Add props interface": {
		"scope": "typescriptreact",
		"prefix": "iprops",
		"body": [
			"export interface Props {",
			"\t$0",
			"}"
		],
		"description": "adds a Props TypeScript interface."
	},
	"Use effect": {
		"scope": "typescriptreact",
		"prefix": "useeffect",
		"body": [
			"useEffect(() => {",
			"\t$0",
			"});"
		],
		"description": "adds empty useEffect",
	},
	"Return": {
		"scope": "typescriptreact",
		"prefix": "ret",
		"body": [
			"return (",
			"\t${1:null}",
			");"
		],
		"description": "return",
	},
	"Styles": {
		"scope": "typescriptreact",
		"prefix": "styles",
		"body": [
			"import styles from \"./$TM_FILENAME_BASE.module.css\";"
		],
		"description": "import styles as module"
	},
	"Class style": {
		"scope": "typescriptreact",
		"prefix": "cstyl",
		"body": "className={styles$0}",
		"description": "className prepared for style import usage."
	}
}